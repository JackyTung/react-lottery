{"version":3,"sources":["components/Button/index.js","components/Dialog/LuckyWinner/index.js","components/Page/index.js","components/Page/PageContent/styles.js","components/Page/PageContent/index.js","components/Page/PageTitle/styles.js","components/Page/PageTitle/index.js","pages/Lottery/MemberList/index.js","pages/Lottery/index.js","pages/NotFound/index.js","routes/lottery.js"],"names":["useStyles","makeStyles","createStyles","theme","button","borderRadius","border","palette","primary","main","color","minWidth","height","backgroundColor","EnhancedButton","children","props","classes","Button","variant","className","disableElevation","dialog","minHeight","width","LuckyWinner","open","name","handleCancel","Dialog","aria-labelledby","aria-describedby","paper","DialogTitle","id","disableTypography","Typography","DialogContent","DialogContentText","DialogActions","onClick","styles","Page","classnames","root","position","top","PageTitle","left","zIndex","background","borderBottom","text","title","AppBar","elevation","Toolbar","list","overflowY","avatar","secondary","MemberList","dispatch","useDispatch","members","useSelector","state","sources","page","hasMore","List","dataLength","length","next","getMembers","loader","Progress","scrollableTarget","map","member","ListItem","key","_id","ListItemAvatar","Avatar","substring","toUpperCase","ListItemText","email","DisplayTimer","counter","timer","isRunning","useEffect","updateCountDownCounter","seconds","helperDate","addSeconds","Date","format","formattedTime","InputTimer","useState","value","setValue","errorMsg","setErrorMsg","style","marginRight","TextField","label","type","onChange","e","target","helperText","error","marginTop","stopCounter","setCounter","startCounter","CountDownTimer","Lottery","loaded","lottery","getMembersCancelled","PageContent","isEmpty","getLuckyMemberCancelled","NotFound","LotteryRouter","url","useRouteMatch","path","component","LotteryPage"],"mappings":"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","file":"static/js/4.39e801f5.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  button: {\n    borderRadius: 20,\n    border: `1px solid ${theme.palette.primary.main}`,\n    color: 'white',\n    minWidth: 90,\n    height: 40,\n    '&:hover': {\n      color: theme.palette.primary.main,\n      backgroundColor: 'white',\n    },\n  },\n});\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst EnhancedButton = ({ children, ...props }) => {\n  const classes = useStyles();\n  return (\n    <Button variant=\"contained\" color=\"primary\" className={classes.button} disableElevation {...props}>\n      {children}\n    </Button>\n  );\n};\n\nexport default EnhancedButton;\n","import React from 'react';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@/components/Button';\n\nconst styles = theme => ({\n  dialog: {\n    minHeight: 200,\n    width: 400,\n  },\n});\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst LuckyWinner = ({ open, name = '', handleCancel }) => {\n  const classes = useStyles();\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby=\"lucky-winner-dialog\"\n      aria-describedby=\"lucky-winner-description\"\n      classes={{ paper: classes.dialog }}\n    >\n      <DialogTitle id=\"no-dataset-title\" disableTypography>\n        <Typography variant=\"h5\">The winner is.....</Typography>\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText variant=\"body1\">{name}, congratulations!</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleCancel}>cancel</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default LuckyWinner;\n","import React from 'react';\n\nimport classnames from 'classnames';\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport styles from './styles';\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst Page = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <main id=\"page\" className={classnames(classes.root)}>\n      {children}\n    </main>\n  );\n};\n\nexport default Page;\n","const styles = () => ({\n  root: {\n    position: 'relative',\n    top: 40,\n    height: '100%',\n  },\n});\n\nexport default styles;\n","import React from 'react';\n\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport styles from './styles';\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst PageTitle = ({ children }) => {\n  const classes = useStyles();\n  return <section className={classes.root}>{children}</section>;\n};\n\nexport default PageTitle;\n","const styles = theme => ({\n  root: {\n    top: 0,\n    left: 0,\n    zIndex: 1299,\n    width: '100%',\n    backgroundColor: theme.palette.background.main,\n    borderBottom: `1px solid ${theme.palette.border.main}`,\n  },\n  text: {\n    color: 'white',\n  },\n});\n\nexport default styles;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport styles from './styles';\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst PageTitle = ({ title = '' }) => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"sticky\" elevation={0} className={classes.root}>\n      <Toolbar className=\"justify-center\">\n        <Typography variant=\"h6\" className={classes.text}>\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default PageTitle;\n","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Progress from '@/components/Progress';\nimport { getMembers } from '@/features/members';\n\nexport const getLetterAvatar = name => name && name.substring(0, 2).toUpperCase();\n\nconst styles = theme => ({\n  list: {\n    width: 300,\n    height: 370,\n    overflowY: 'auto',\n    border: `1px solid ${theme.palette.border.main}`,\n    backgroundColor: theme.palette.button.main,\n  },\n  text: {\n    color: 'black',\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n});\n\nconst useStyles = makeStyles(createStyles(styles));\n\nconst MemberList = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const members = useSelector(state => state.members.sources);\n  const page = useSelector(state => state.members.page);\n  const hasMore = useSelector(state => state.members.hasMore);\n\n  const handleNext = () => dispatch(getMembers({ page: page + 1 }));\n\n  return (\n    <div>\n      <Typography variant=\"h5\">Member List</Typography>\n      <List id=\"mList\" className={classes.list}>\n        <InfiniteScroll\n          dataLength={members.length}\n          hasMore={hasMore}\n          next={handleNext}\n          loader={<Progress height={135} />}\n          scrollableTarget=\"mList\"\n        >\n          {members.map(member => (\n            <ListItem key={member._id}>\n              <ListItemAvatar>\n                <Avatar className={classes.avatar}>{getLetterAvatar(member.name)}</Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={member.name} secondary={member.email} />\n            </ListItem>\n          ))}\n        </InfiniteScroll>\n      </List>\n    </div>\n  );\n};\n\nexport default MemberList;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport addSeconds from 'date-fns/addSeconds';\nimport format from 'date-fns/format';\nimport isEmpty from 'lodash/isEmpty';\n\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@/components/Button';\nimport LuckyWinnerDialog from '@/components/Dialog/LuckyWinner';\nimport Page from '@/components/Page';\nimport PageContent from '@/components/Page/PageContent';\nimport PageTitle from '@/components/Page/PageTitle';\nimport Progress from '@/components/Progress';\nimport { getLuckyMemberCancelled } from '@/features/lottery';\nimport { getMembers, getMembersCancelled } from '@/features/members';\nimport { setCounter, startCounter, stopCounter, updateCountDownCounter } from '@/features/timer';\nimport MemberList from './MemberList';\n\nconst formattedTime = seconds => {\n  const helperDate = addSeconds(new Date(0), seconds);\n  return format(helperDate, 'mm:ss');\n};\n\nconst DisplayTimer = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector(state => state.timer.counter);\n  const isRunning = useSelector(state => state.timer.isRunning);\n\n  useEffect(() => {\n    if (counter > 0 && isRunning) {\n      dispatch(updateCountDownCounter());\n    }\n  }, [counter, isRunning, dispatch]);\n\n  if (counter <= 0) {\n    return (\n      <Typography variant=\"h1\" color=\"textPrimary\">\n        00:00\n      </Typography>\n    );\n  }\n  return (\n    <Typography variant=\"h1\" color=\"textPrimary\">\n      {formattedTime(counter)}\n    </Typography>\n  );\n};\n\nconst InputTimer = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const isRunning = useSelector(state => state.timer.isRunning);\n\n  const handleStart = () => {\n    if (value <= 0) {\n      return setErrorMsg('* 請輸入大於0的數字');\n    }\n\n    dispatch(setCounter({ counter: value }));\n    dispatch(startCounter());\n    setValue('');\n  };\n\n  const handleStop = () => dispatch(stopCounter());\n\n  const handleOnChange = e => {\n    const value = e.target.value;\n    if (value < 0) {\n      return setErrorMsg('* 請輸入大於0的數字');\n    }\n    setErrorMsg('');\n    return setValue(value);\n  };\n\n  return (\n    <div className=\"d-flex\">\n      <div style={{ marginRight: 8 }}>\n        <TextField\n          id=\"filled-number\"\n          label=\"enter seconds\"\n          type=\"number\"\n          variant=\"filled\"\n          value={value}\n          onChange={handleOnChange}\n          helperText={errorMsg}\n          error={!!errorMsg}\n        />\n      </div>\n      <div style={{ marginTop: 8 }}>\n        {isRunning ? <Button onClick={handleStop}>stop</Button> : <Button onClick={handleStart}>start</Button>}\n      </div>\n    </div>\n  );\n};\n\nconst CountDownTimer = () => {\n  return (\n    <div>\n      <Typography variant=\"h5\">Countdown Timer</Typography>\n      <InputTimer />\n      <DisplayTimer />\n    </div>\n  );\n};\n\nconst Lottery = () => {\n  const dispatch = useDispatch();\n  const loaded = useSelector(state => state.members.loaded);\n  const lottery = useSelector(state => state.lottery);\n\n  useEffect(() => {\n    dispatch(getMembers());\n\n    return () => dispatch(getMembersCancelled());\n  }, [dispatch]);\n\n  const handleCancel = () => dispatch(getLuckyMemberCancelled());\n\n  return (\n    <Page>\n      <PageTitle title=\"Welcome to Lottery page\" />\n      <PageContent>\n        {!loaded ? (\n          <Progress />\n        ) : (\n          <>\n            <div className=\"d-flex justify-space-around\">\n              <CountDownTimer />\n              <MemberList />\n            </div>\n            <LuckyWinnerDialog open={!isEmpty(lottery.name)} handleCancel={handleCancel} name={lottery.name} />\n          </>\n        )}\n      </PageContent>\n    </Page>\n  );\n};\n\nexport default Lottery;\n","import React from 'react';\n\nconst NotFound = () => {\n  return <div>This is NotFound page</div>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport LotteryPage from '@/pages/Lottery';\nimport NotFound from '@/pages/NotFound';\n\nconst LotteryRouter = () => {\n  const { url } = useRouteMatch();\n  return (\n    <Switch>\n      <Route path={url} component={LotteryPage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n};\n\nexport default LotteryRouter;\n"],"sourceRoot":""}